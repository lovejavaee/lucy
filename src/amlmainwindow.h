/* amlmainwindow.h generated by valac 0.20.1, the Vala compiler, do not modify */


#ifndef __AMLMAINWINDOW_H__
#define __AMLMAINWINDOW_H__

#include <glib.h>
#include <gtk/gtk.h>

G_BEGIN_DECLS
#define TYPE_AML_MAIN_WINDOW (aml_main_window_get_type ())
#define AML_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_AML_MAIN_WINDOW, AmlMainWindow))
#define AML_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_AML_MAIN_WINDOW, AmlMainWindowClass))
#define IS_AML_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_AML_MAIN_WINDOW))
#define IS_AML_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_AML_MAIN_WINDOW))
#define AML_MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_AML_MAIN_WINDOW, AmlMainWindowClass))
typedef struct _AmlMainWindow AmlMainWindow;
typedef struct _AmlMainWindowClass AmlMainWindowClass;
typedef struct _AmlMainWindowPrivate AmlMainWindowPrivate;

struct _AmlMainWindow {
    GtkWindow parent_instance;
    AmlMainWindowPrivate *priv;
};

struct _AmlMainWindowClass {
    GtkWindowClass parent_class;
};


GType aml_main_window_get_type(void) G_GNUC_CONST;
AmlMainWindow *aml_main_window_new(void);
AmlMainWindow *aml_main_window_construct(GType object_type);


void aml_main_window_show(AmlMainWindow * window);

/*
 * 启动adb服务器
 */
void aml_main_window_start_server(AmlMainWindow * window);


G_END_DECLS
#endif
