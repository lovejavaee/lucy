/* lcmainwindow.h generated by valac 0.20.1, the Vala compiler, do not modify */


#ifndef __LCMAINWINDOW_H__
#define __LCMAINWINDOW_H__

#include <glib.h>
#include <gtk/gtk.h>

G_BEGIN_DECLS
#define TYPE_LC_MAIN_WINDOW (lc_main_window_get_type ())
#define LC_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_LC_MAIN_WINDOW, LcMainWindow))
#define LC_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_LC_MAIN_WINDOW, LcMainWindowClass))
#define IS_LC_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_LC_MAIN_WINDOW))
#define IS_LC_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_LC_MAIN_WINDOW))
#define LC_MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_LC_MAIN_WINDOW, LcMainWindowClass))
typedef struct _LcMainWindow LcMainWindow;
typedef struct _LcMainWindowClass LcMainWindowClass;
typedef struct _LcMainWindowPrivate LcMainWindowPrivate;

struct _LcMainWindow {
    GtkWindow parent_instance;
    LcMainWindowPrivate *priv;
};

struct _LcMainWindowClass {
    GtkWindowClass parent_class;
};


GType lc_main_window_get_type(void) G_GNUC_CONST;
LcMainWindow *lc_main_window_new(void);
LcMainWindow *lc_main_window_construct(GType object_type);


void lc_main_window_show(LcMainWindow * window);

/*
 * 启动adb服务器
 */
void lc_main_window_start_server(LcMainWindow * window);


G_END_DECLS
#endif
