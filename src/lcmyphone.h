/* lcmyphone.h generated by valac 0.22.1, the Vala compiler, do not modify */


#ifndef __LCMYPHONE_H__
#define __LCMYPHONE_H__

#include <glib.h>
#include <gtk/gtk.h>

#include "lcprotocol.h"

G_BEGIN_DECLS
#define TYPE_LC_MY_PHONE (lc_my_phone_get_type ())
#define LC_MY_PHONE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_LC_MY_PHONE, LcMyPhone))
#define LC_MY_PHONE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_LC_MY_PHONE, LcMyPhoneClass))
#define IS_LC_MY_PHONE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_LC_MY_PHONE))
#define IS_LC_MY_PHONE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_LC_MY_PHONE))
#define LC_MY_PHONE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_LC_MY_PHONE, LcMyPhoneClass))
typedef struct _LcMyPhone LcMyPhone;
typedef struct _LcMyPhoneClass LcMyPhoneClass;
typedef struct _LcMyPhonePrivate LcMyPhonePrivate;

struct _LcMyPhone {
    GtkStack parent_instance;
    LcMyPhonePrivate *priv;
};

struct _LcMyPhoneClass {
    GtkStackClass parent_class;
};


GType lc_my_phone_get_type(void) G_GNUC_CONST;
LcMyPhone *lc_my_phone_new(void);
LcMyPhone *lc_my_phone_construct(GType object_type);

void lc_my_phone_show_disconnect(LcMyPhone * self);
void lc_my_phone_show_connecting(LcMyPhone * self);
void lc_my_phone_show_connected(LcMyPhone * self);
void lc_my_phone_show_connected_with_info(LcMyPhone * self,
                                          LcProtocolPhone * phone);

void lc_my_phone_set_connect_callback(LcMyPhone * self, GCallback callback,
                                      gpointer user_data);

G_END_DECLS
#endif
